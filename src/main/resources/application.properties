graphql.playground.subscription-endpoint=/subscriptions
graphql.servlet.subscriptions.websocket.path=/subscriptions

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/speedtest
spring.datasource.username=postgres
spring.datasource.password=gjkjcfnsq

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.type.descriptor.sql=trace
graphql.extended-scalars=Long
# spring.jpa.defer-datasource-initialization=true
# spring.sql.init.mode=always
spring.jpa.open-in-view=false
#logging.charset.console=866
spring.datasource.hikari.auto-commit=false


# graphql.servlet.cors.allowed-origins=http://localhost:4200
# graphql.servlet.cors.allowed-methods=GET,POST,OPTIONS
# graphql.servlet.cors.allow-credentials=true
# # graphql.servlet.cors.allowed-headers=Content-Type,Accept,Origin,X-Requested-With,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials
# # graphql.servlet.cors.exposed-headers=Content-Type,Accept,Origin,X-Requested-With,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials
# graphql.servlet.cors.max-age=3600


graphql.servlet.cors.allowed-origins=http://192.168.0.103:4200
graphql.servlet.cors.allowed-methods=*
graphql.servlet.cors.allow-credentials=true
graphql.servlet.cors.allowed-headers=*
graphql.servlet.cors.exposed-headers=*
graphql.servlet.cors.max-age=3600

# spring.mvc.dispatch-options-request=true

# spring.main.allow-bean-definition-overriding=true

jwt.access.token.secret=d0hZcFpSblJDa3d0SlZNV3h4Q1V4Y1RjTWp3RVdHUWpaaFBtQWpCZ2FnWUpyWmZwTlk=
jwt.access.token.expiration=300
jwt.refresh.token.secret=WGZzeWZVWndTTWNrVFZVUUdjRk1iWGpNZkJBcFZEckV1dlFhVXdjRWZVbkpZbnBlWmg=
jwt.refresh.token.expiration=2592000
